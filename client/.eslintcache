[{"C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\index.js":"1","C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\App.js":"2","C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\Views\\map.js":"3","C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\Views\\input.js":"4","C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\components\\LogoutButton.js":"5","C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\Views\\home.js":"6","C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\components\\LoginButton.js":"7","C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\components\\Footer.js":"8","C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\components\\Searchbar.js":"9","C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\components\\List.js":"10","C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\components\\List-container.js":"11","C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\components\\Input.js":"12","C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\components\\Header.js":"13","C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\components\\PlacesAutoComplete.js":"14","C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\components\\Navbar.js":"15","C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\utils\\API.js":"16"},{"size":470,"mtime":1608415206253,"results":"17","hashOfConfig":"18"},{"size":942,"mtime":1608415197555,"results":"19","hashOfConfig":"18"},{"size":10350,"mtime":1608415197556,"results":"20","hashOfConfig":"18"},{"size":366,"mtime":1608408909429,"results":"21","hashOfConfig":"18"},{"size":319,"mtime":1608434949121,"results":"22","hashOfConfig":"18"},{"size":1848,"mtime":1608434860362,"results":"23","hashOfConfig":"18"},{"size":296,"mtime":1608419036965,"results":"24","hashOfConfig":"18"},{"size":225,"mtime":1608406932733,"results":"25","hashOfConfig":"18"},{"size":317,"mtime":1608408909446,"results":"26","hashOfConfig":"18"},{"size":1069,"mtime":1608408909432,"results":"27","hashOfConfig":"18"},{"size":199,"mtime":1608415197566,"results":"28","hashOfConfig":"18"},{"size":5633,"mtime":1608415197558,"results":"29","hashOfConfig":"18"},{"size":174,"mtime":1608405856868,"results":"30","hashOfConfig":"18"},{"size":2410,"mtime":1608415206243,"results":"31","hashOfConfig":"18"},{"size":1202,"mtime":1608417045756,"results":"32","hashOfConfig":"18"},{"size":231,"mtime":1608408909461,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1p9us2f",{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"36"},"C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\index.js",[],["73","74"],"C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\App.js",["75","76"],"import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./Views/home\";\nimport Map from \"./Views/map\";\nimport LoginButton from './components/LoginButton';\nimport LogoutButton from './components/LogoutButton';\nimport Input from \"./Views/input\"\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <div>\n          <div className=\"container\"></div>\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n              \n            </Route>\n            <Route path=\"/map\">\n              {/* Route path to Search Page */}\n              <Map />\n            </Route>\n            <Route path=\"/input\">\n              {/* Route path to Input Page */} \n              <Input/>\n              </Route>\n            <Route path=\"/\">{/* Route path to Login Page */}</Route>\n\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\Views\\map.js",["77","78","79"],"import React from \"react\";\n// import logo from \"./logo.svg\";\nimport {\n  InfoWindow,\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n} from \"react-google-maps\";\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from \"react-places-autocomplete\";\nimport Geocode from \"react-geocode\";\nimport Navbar from \"../components/Navbar\";\nimport Searchbar from \"../components/Searchbar\";\nimport Footer from \"../components/Footer\";\n// import Autocomplete from \"react-google-autocomplete\";\nimport List from \"../components/List\";\nimport ListContainer from \"../components/List-container\";\nimport Input from \"../components/Input\";\nimport \"./map.css\";\nimport AutoCompletePlaces from \"../components/PlacesAutoComplete\";\nimport API from \"../utils/API\";\n// import Header from \"../../../Portfolio-React/src/components/Header\";\n\nGeocode.setApiKey(\"AIzaSyD812o98-5qpcViO3kCoUa8mpd4eyflbPo\");\n\nclass Map extends React.Component {\n  state = {\n    locations: [],\n    address: \"\",\n    city: \"\",\n    area: \"\",\n    state: \"\",\n    zoom: 50,\n    height: 400,\n    mapPosition: {\n      lat: 44.986656,\n      lng: -93.258133,\n    },\n    markerPosition: {\n      lat: 44.986656,\n      lng: -93.258133,\n    },\n    filter: false,\n    filteredLocation: [],\n    // this.state.locations ? this.state.locations.filter(location => location.address.toLocaleLowerCase().includes(this.state.address.toLocaleLowerCase())) : []\n  };\n\n  componentDidMount() {\n    this.loadLocations();\n  }\n\n  loadLocations = () => {\n    API.getLocation()\n      .then((res) => {\n        console.log(\"Location list\", this.state.locations);\n        this.setState({ locations: res.data });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  onMarkerDragEnd = (event) => {\n    let newLat = event.latLng.lat();\n    let newLng = event.latLng.lng();\n    console.log(event);\n\n    // Adding markers on the map\n    Geocode.fromLatLng(newLat, newLng).then(\n      console.log(\"Latitude\", newLat, \"Longitude\", newLng)\n\n      // this.setState({ mapPosition: {lat:newLat}, markerPosition: {lng:newLng} })\n      // this.setState({mapPosition:{lat=}\n      // })\n      //  this.setState.state.mapPosition.lat.newLat,\n      //   this.setState.state.mapPosition.lng.newLng,\n      //   this.setState.state.markerPosition.lng.newLng,\n      //   this.setState.state.markerPosition.lat.newLat,\n\n      // console.log(newLat, newLng)\n\n      //   this.setState{\n      //\n      // mapPosition: {\n      //   lat: newLat,\n      //   lng: newLng,\n      // },\n      // markerPosition: {\n      //   lat: newLat,\n\n      //   lng: newLng\n      // },\n      //   }\n    );\n  };\n\n  handleChange = (address) => {\n    this.setState({ address: address });\n    this.setState({ filter: address ? true : false });\n    this.setState({\n      filteredLocation: this.state.locations.filter((location) =>\n        location.address\n          .toLocaleLowerCase()\n          .includes(this.state.address.toLocaleLowerCase()) \n      ),\n    });\n  };\n\n  handleSelect = (address) => {\n    geocodeByAddress(address)\n      .then((results) => getLatLng(results[0]))\n      .then((latLng) => {\n        console.log(\"Success\", latLng);\n        this.setState({ mapPosition: latLng, markerPosition: latLng });\n      })\n      .catch((error) => console.error(\"Error\", error));\n  };\n\n  render() {\n    // this.loadLocations();\n    const MapWithAMarker = withScriptjs(\n      withGoogleMap((props) => (\n        <GoogleMap\n          defaultZoom={12}\n          defaultCenter={{\n            lat: this.state.markerPosition.lat,\n            lng: this.state.markerPosition.lng,\n          }}\n        >\n          <Marker\n            draggable={false}\n            onDragEnd={this.onMarkerDragEnd}\n            position={{\n              lat: this.state.markerPosition.lat,\n              lng: this.state.markerPosition.lng,\n            }}\n          >\n            <InfoWindow>\n              <div>{this.state.address}</div>\n            </InfoWindow>\n          </Marker>\n          {this.state.locations.length ? (\n            (console.log(\"Location Object\", this.state.locations),\n            (\n              <div>\n                {this.state.locations.map((location, idx) => {\n                  console.log(parseInt(location.lat));\n                  return (\n                    <Marker\n                      key={idx}\n                      position={{\n                        lat: parseFloat(location.lat),\n                        lng: parseFloat(location.lng),\n                      }}\n                    />\n                  );\n                })}\n              </div>\n            ))\n          ) : (\n            <h5>There is no Food Sharing Location here</h5>\n          )}\n          {/* <Marker\n          \n                position={{\n                  lat: 45.0861,\n                  lng: -93.2633,\n                }}\n              />; */}\n\n          {/* {Geocode.fromAddress(\"Coon Rapids\").then(\n            (response) => {\n              const { lat, lng } = response.results[0].geometry.location;\n              \n              console.log(lat, lng);\n            },\n            (error) => {\n              console.error(error);\n            }\n          )} */}\n        </GoogleMap>\n      ))\n    );\n\n    return (\n      this.loadLocations,\n      (\n        <div className=\"mapContainer\">\n          <Navbar />\n\n          {/* <Autocomplete\n\n          // style={{\n           \n          //   // backgroundImage= none !important;\n            \n          //   // justifySelf: \"center\",\n          //   // textAlign: \"center\",\n          //   // marginLeft: \"300px\",\n          //   // marginBottom: \"10px\",\n\n          // }}\n          types={[\"(cities)\"]}\n          \n          // onPlaceSelected={this.onPlaceSelected}\n        /> */}\n\n          {/* <AddressBar/> */}\n          <div className=\"container\">\n            {/* <Searchbar/> */}\n\n            <div style={{ textAlign: \"left\" }}>\n              <h3>\n                <b>Food Sharing Locations</b>\n              </h3>\n            </div>\n\n            <div className=\"row lg-12\">\n              <div className=\"col-xs-6 col-md-6\">\n                <ListContainer>\n                  {!this.state.filter\n                    ? this.state.locations.map((location, idx) => {\n                        return (\n                          <List\n                            key={idx}\n                            onClick={() => {\n                              console.log(\"List onclick\");\n                            }}\n                            address={location.address}\n                            food={location.FoodItems[0].category}\n                            description={location.FoodItems[0].item_description}\n                          />\n                        );\n                      })\n                    : this.state.filteredLocation.length === 0 ? <h4>Sorry no Locations found in this area</h4> :  (this.state.filteredLocation.map((filteredLocation, idx) => {\n                        console.log(\n                          \"filtered filteredLocation\",\n                          filteredLocation\n                        );\n                        return (\n                          <List\n                            key={idx}\n                            onClick={() => {\n                              console.log(\"List onclick\");\n                            }}\n                            address={filteredLocation.address}\n                            food={filteredLocation.FoodItems[0].category}\n                            description={\n                              filteredLocation.FoodItems[0].item_description\n                            }\n                          />\n                        );\n                      }))}\n                </ListContainer>\n              </div>\n              <div className=\"col-xs-12 col-md-6\">\n                {/* <AutoCompletePlaces/> */}\n                <PlacesAutocomplete\n                  value={this.state.address}\n                  onChange={this.handleChange}\n                  onSelect={this.handleSelect}\n                  style={{ justifyItems: \"center\" }}\n                >\n                  {({\n                    getInputProps,\n                    suggestions,\n                    getSuggestionItemProps,\n                    loading,\n                  }) => (\n                    <div>\n                      <input\n                        {...getInputProps({\n                          placeholder: \"Search Places ...\",\n                          className: \"location-search-input\",\n                        })}\n                      />\n                      <div className=\"autocomplete-dropdown-container\">\n                        {loading && <div>Loading...</div>}\n                        {suggestions.map((suggestion) => {\n                          const className = suggestion.active\n                            ? \"suggestion-item--active\"\n                            : \"suggestion-item\";\n                          // inline style for demonstration purpose\n                          const style = suggestion.active\n                            ? { backgroundColor: \"#fafafa\", cursor: \"pointer\" }\n                            : { backgroundColor: \"#ffffff\", cursor: \"pointer\" };\n                          return (\n                            <div\n                              {...getSuggestionItemProps(suggestion, {\n                                className,\n                                style,\n                              })}\n                            >\n                              <span>{suggestion.description}</span>\n                            </div>\n                          );\n                        })}\n                      </div>\n                    </div>\n                  )}\n                </PlacesAutocomplete>\n                <MapWithAMarker\n                  googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyD812o98-5qpcViO3kCoUa8mpd4eyflbPo&v=3.exp&libraries=geometry,drawing,places\"\n                  loadingElement={<div style={{ height: `100%` }} />}\n                  containerElement={\n                    <div style={{ height: `600px`, width: `100%` }} />\n                  }\n                  mapElement={<div style={{ height: `100%`, width: \"100%\" }} />}\n                ></MapWithAMarker>\n              </div>\n            </div>\n          </div>\n\n          <Footer />\n        </div>\n      )\n    );\n  }\n}\n\nexport default Map;\n","C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\Views\\input.js",[],"C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\components\\LogoutButton.js",[],"C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\Views\\home.js",[],"C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\components\\LoginButton.js",[],"C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\components\\Footer.js",[],"C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\components\\Searchbar.js",[],"C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\components\\List.js",["80","81","82","83","84","85"],"import React from \"react\";\nimport \"./List.css\";\nimport {\n  TwitterIcon,\n  TwitterShareButton,\n  EmailShareButton,\n  FacebookShareButton,\n  WhatsappShareButton,\n  LinkedinShareButton,\n} from \"react-share\";\n\nexport default function List(props) {\n  return (\n    <div className=\"listGroup\">\n      Address: {props.address} <br />\n      Foods: {props.food}\n      <br />\n      Description: {props.description}\n      <br />\n      <div>\n        {/* <TwitterIcon size={32} round={true} />\n        <TwitterShareButton/> */}\n        <button type=\"button\" className=\"btn btn-primary btn-sm\">\n          Share\n          {/* <EmailShareButton/>\n      <FacebookShareButton/>\n      <WhatsappShareButton />\n      <LinkedinShareButton /> */}\n        </button>\n        <button type=\"button\" className=\"btn btn-success btn-sm\">\n          Direction\n        </button>\n        <button\n          onClick={() => {\n            console.log(\"current location\");\n          }}\n        >\n          {\" \"}\n          Show Location\n        </button>\n      </div>\n      <hr color=\"red\" />\n    </div>\n  );\n}\n","C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\components\\List-container.js",["86"],"import React from 'react';\nimport \"./List-container.css\"\n\nexport default function(props) {\n\nreturn(\n    <div className=\"listContainer\" >\n      {\n      props.children    \n      }  \n    </div>    \n)\n\n}","C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\components\\Input.js",["87","88","89"],"import React, { useState } from \"react\";\nimport \"./Input.css\";\nimport API from \"../utils/API\";\nimport Geocode from \"react-geocode\";\nimport { Marker } from \"react-google-maps\";\n\nfunction InputCard() {\n  const [address, setAddress] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [lat, setLat] = useState(\"\");\n  const [lng, setLng] = useState(\"\");\n  const [currentLat, setCurrentLat] = useState(\"\");\n  const [currentLng, setCurrentLng] = useState(\"\");\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    API.saveLocation({\n      address: address,\n      category: category,\n      item_description: description,\n      lat: lat,\n      lng: lng,\n    });\n\n    setAddress(\"\");\n  };\n\n  const getPosition = (position) => {\n    setLat (position.coords.latitude);\n    setLng (position.coords.longitude);\n    setAddress(position.coords.latitude + \", \" + position.coords.longitude)\n    console.log(\"CurrentLngLat\", currentLat, currentLng)\n  };\n\n  const getLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(getPosition);\n    } else {\n      console.log(\"Geolocation is not supported by this browser.\");\n    }\n  };\n\n  return (\n    <container className=\"card inputCard\">\n      <span className=\"title\">\n        <h5>Please add details below</h5>\n      </span>\n      <form onSubmit={submitHandler}>\n        {/* Submit Address */}\n        <div className=\"row address\">\n          <div className=\"col\">\n            <input\n              name=\"address\"\n              placeholder=\"Enter Donating  Address\"\n              type=\"text\"\n              className=\"form-control\"\n              aria-label=\"Default\"\n              aria-describedby=\"inputGroup-sizing-default\"\n              onChange={\n                (Geocode.fromAddress(address).then(\n                  (response) => {\n                    const { lat, lng } = response.results[0].geometry.location;\n                    setLat(lat);\n                    setLng(lng);\n\n                    console.log(lat, lng, \"Input Address\", address);\n                  },\n                  (error) => {\n                    console.error(error);\n                  }\n                ),\n                (event) => setAddress(event.target.value))\n              }\n            />\n          </div>\n          <div className=\"col\">\n            <button\n              type=\"button\"\n              className=\"btn useMyLocation btn-success btn-md\"\n              onClick={getLocation}\n            >\n              Use My Location\n            </button>\n          </div>\n        </div>\n        {/* Food Category */}\n        <b>Please Choose Food Category:</b>\n        <div className=\"custom-control custom-checkbox\">\n          <input\n            name=\"category\"\n            value=\"Canned Foods\"\n            type=\"checkbox\"\n            className=\"custom-control-input\"\n            id=\"customCheck1\"\n            onChange={(event) => setCategory(event.target.value)}\n          />\n          <label className=\"custom-control-label\" for=\"customCheck1\">\n            Canned Foods\n          </label>\n        </div>\n        <div className=\"custom-control custom-checkbox\">\n          <input\n            name=\"category\"\n            value=\"Breads/Grains\"\n            type=\"checkbox\"\n            className=\"custom-control-input\"\n            id=\"customCheck2\"\n            onChange={(event) =>\n              setCategory(category + \"-- \" + event.target.value)\n            }\n          />\n          <label className=\"custom-control-label\" for=\"customCheck2\">\n            Breads/Grains\n          </label>\n        </div>\n        <div className=\"custom-control custom-checkbox\">\n          <input\n            name=\"category\"\n            value=\"Vegetables/Fruits\"\n            type=\"checkbox\"\n            className=\"custom-control-input\"\n            id=\"customCheck3\"\n            onChange={(event) =>\n              setCategory(category + \"-- \" + event.target.value)\n            }\n          />\n          <label className=\"custom-control-label\" for=\"customCheck3\">\n            Vegetables/Fruits\n          </label>\n        </div>\n        <div className=\"custom-control custom-checkbox\">\n          <input\n            name=\"category\"\n            value=\"Drink\"\n            type=\"checkbox\"\n            className=\"custom-control-input\"\n            id=\"customCheck4\"\n            onChange={(event) =>\n              setCategory(category + \"-- \" + event.target.value)\n            }\n          />\n          <label className=\"custom-control-label\" for=\"customCheck4\">\n            Drinks\n          </label>\n        </div>\n        <div className=\"custom-control custom-checkbox\">\n          <input\n            name=\"category\"\n            value=\"Other\"\n            type=\"checkbox\"\n            className=\"custom-control-input\"\n            id=\"customCheck5\"\n            onChange={(event) =>\n              setCategory(category + \"-- \" + event.target.value)\n            }\n          />\n          <label className=\"custom-control-label\" for=\"customCheck5\">\n            Other\n          </label>\n        </div>\n        {/* Description */}\n        <textarea\n          name=\"description\"\n          className=\"textarea\"\n          rows=\"4\"\n          cols=\"32\"\n          placeholder=\"Description / Comment\"\n          onChange={(event) => setDescription(event.target.value)}\n        ></textarea>{\" \"}\n        <br />\n        <button\n          type=\"button\"\n          className=\"btn btn-primary btn-md\"\n          onClick={submitHandler}\n        >\n          Submit{\" \"}\n        </button>\n      </form>\n    </container>\n  );\n}\n\nexport default InputCard;\n","C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\components\\Header.js",[],"C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\components\\PlacesAutoComplete.js",[],"C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\components\\Navbar.js",[],"C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\utils\\API.js",["90"],"import axios from \"axios\"\n\nexport default {\n    saveLocation: function(locationInfo) {\n        return axios.post(\"/api/input\", locationInfo);\n      },\n\n      getLocation: function(){\n        return axios.get(\"api/input\")\n      }\n\n}",{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":5,"column":8,"nodeType":"97","messageId":"98","endLine":5,"endColumn":19},{"ruleId":"95","severity":1,"message":"99","line":6,"column":8,"nodeType":"97","messageId":"98","endLine":6,"endColumn":20},{"ruleId":"95","severity":1,"message":"100","line":16,"column":8,"nodeType":"97","messageId":"98","endLine":16,"endColumn":17},{"ruleId":"95","severity":1,"message":"101","line":21,"column":8,"nodeType":"97","messageId":"98","endLine":21,"endColumn":13},{"ruleId":"95","severity":1,"message":"102","line":23,"column":8,"nodeType":"97","messageId":"98","endLine":23,"endColumn":26},{"ruleId":"95","severity":1,"message":"103","line":4,"column":3,"nodeType":"97","messageId":"98","endLine":4,"endColumn":14},{"ruleId":"95","severity":1,"message":"104","line":5,"column":3,"nodeType":"97","messageId":"98","endLine":5,"endColumn":21},{"ruleId":"95","severity":1,"message":"105","line":6,"column":3,"nodeType":"97","messageId":"98","endLine":6,"endColumn":19},{"ruleId":"95","severity":1,"message":"106","line":7,"column":3,"nodeType":"97","messageId":"98","endLine":7,"endColumn":22},{"ruleId":"95","severity":1,"message":"107","line":8,"column":3,"nodeType":"97","messageId":"98","endLine":8,"endColumn":22},{"ruleId":"95","severity":1,"message":"108","line":9,"column":3,"nodeType":"97","messageId":"98","endLine":9,"endColumn":22},{"ruleId":"109","severity":1,"message":"110","line":4,"column":1,"nodeType":"111","endLine":14,"endColumn":2},{"ruleId":"95","severity":1,"message":"112","line":5,"column":10,"nodeType":"97","messageId":"98","endLine":5,"endColumn":16},{"ruleId":"95","severity":1,"message":"113","line":13,"column":22,"nodeType":"97","messageId":"98","endLine":13,"endColumn":35},{"ruleId":"95","severity":1,"message":"114","line":14,"column":22,"nodeType":"97","messageId":"98","endLine":14,"endColumn":35},{"ruleId":"109","severity":1,"message":"115","line":3,"column":1,"nodeType":"111","endLine":12,"endColumn":2},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"no-unused-vars","'LoginButton' is defined but never used.","Identifier","unusedVar","'LogoutButton' is defined but never used.","'Searchbar' is defined but never used.","'Input' is defined but never used.","'AutoCompletePlaces' is defined but never used.","'TwitterIcon' is defined but never used.","'TwitterShareButton' is defined but never used.","'EmailShareButton' is defined but never used.","'FacebookShareButton' is defined but never used.","'WhatsappShareButton' is defined but never used.","'LinkedinShareButton' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'Marker' is defined but never used.","'setCurrentLat' is assigned a value but never used.","'setCurrentLng' is assigned a value but never used.","Assign object to a variable before exporting as module default","no-global-assign","no-unsafe-negation"]