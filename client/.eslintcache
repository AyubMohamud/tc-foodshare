[{"C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\index.js":"1","C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\App.js":"2","C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\components\\LoginButton.js":"3","C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\components\\LogoutButton.js":"4","C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\Views\\home.js":"5","C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\Views\\input.js":"6","C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\Views\\map.js":"7","C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\components\\Navbar.js":"8","C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\components\\Footer.js":"9","C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\components\\Header.js":"10","C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\components\\Input.js":"11","C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\components\\Searchbar.js":"12","C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\components\\List-container.js":"13","C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\components\\List.js":"14","C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\components\\PlacesAutoComplete.js":"15","C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\utils\\API.js":"16"},{"size":470,"mtime":1608595230380,"results":"17","hashOfConfig":"18"},{"size":942,"mtime":1608595230184,"results":"19","hashOfConfig":"18"},{"size":296,"mtime":1608595230316,"results":"20","hashOfConfig":"18"},{"size":319,"mtime":1608595230318,"results":"21","hashOfConfig":"18"},{"size":1857,"mtime":1608595230195,"results":"22","hashOfConfig":"18"},{"size":366,"mtime":1608595230201,"results":"23","hashOfConfig":"18"},{"size":12696,"mtime":1608595230215,"results":"24","hashOfConfig":"18"},{"size":1449,"mtime":1608595230323,"results":"25","hashOfConfig":"18"},{"size":225,"mtime":1608595230254,"results":"26","hashOfConfig":"18"},{"size":174,"mtime":1608595230261,"results":"27","hashOfConfig":"18"},{"size":5993,"mtime":1608595230266,"results":"28","hashOfConfig":"18"},{"size":317,"mtime":1608595230338,"results":"29","hashOfConfig":"18"},{"size":199,"mtime":1608595230274,"results":"30","hashOfConfig":"18"},{"size":805,"mtime":1608595230314,"results":"31","hashOfConfig":"18"},{"size":2410,"mtime":1608595230332,"results":"32","hashOfConfig":"18"},{"size":231,"mtime":1608595230397,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1p9us2f",{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},"C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\index.js",[],["74","75"],"C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\App.js",["76","77"],"import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./Views/home\";\nimport Map from \"./Views/map\";\nimport LoginButton from './components/LoginButton';\nimport LogoutButton from './components/LogoutButton';\nimport Input from \"./Views/input\"\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <div>\n          <div className=\"container\"></div>\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n              \n            </Route>\n            <Route path=\"/map\">\n              {/* Route path to Search Page */}\n              <Map />\n            </Route>\n            <Route path=\"/input\">\n              {/* Route path to Input Page */} \n              <Input/>\n              </Route>\n            <Route path=\"/\">{/* Route path to Login Page */}</Route>\n\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\components\\LoginButton.js",[],"C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\components\\LogoutButton.js",[],"C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\Views\\home.js",[],"C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\Views\\input.js",[],"C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\Views\\map.js",["78","79","80","81","82"],"import React from \"react\";\n// import logo from \"./logo.svg\";\nimport {\n  InfoWindow,\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n  Circle,\n} from \"react-google-maps\";\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from \"react-places-autocomplete\";\nimport Geocode from \"react-geocode\";\nimport Navbar from \"../components/Navbar\";\nimport Searchbar from \"../components/Searchbar\";\nimport Footer from \"../components/Footer\";\n// import Autocomplete from \"react-google-autocomplete\";\nimport List from \"../components/List\";\nimport ListContainer from \"../components/List-container\";\nimport Input from \"../components/Input\";\nimport \"./map.css\";\nimport AutoCompletePlaces from \"../components/PlacesAutoComplete\";\nimport API from \"../utils/API\";\n// import Header from \"../../../Portfolio-React/src/components/Header\";\n\nGeocode.setApiKey(\"AIzaSyD812o98-5qpcViO3kCoUa8mpd4eyflbPo\");\n\nclass Map extends React.Component {\n  state = {\n    locations: [],\n    address: \"\",\n    city: \"\",\n    area: \"\",\n    state: \"\",\n    zoom: 50,\n    height: 400,\n    LatLngId: [\n      // LatLng = {\n      //   lat: \"\",\n      //   lng: \"\"\n      // },\n      // id =\"\"\n    ],\n    mapPosition: {\n      lat: 44.986656,\n      lng: -93.258133,\n    },\n    markerPosition: {\n      lat: 44.986656,\n      lng: -93.258133,\n    },\n    filter: false,\n    filteredLocation: [],\n    InfoWindowShow: false,\n    selectedLocation: null\n    // this.state.locations ? this.state.locations.filter(location => location.address.toLocaleLowerCase().includes(this.state.address.toLocaleLowerCase())) : []\n  };\n\n  componentDidMount() {\n    this.loadLocations();\n  }\n\n  storeLatLngId = () => {\n    this.state.locations.map((location) => {\n      const LatLngList = { lat: \"\", lng: \"\" };\n      return (\n        (LatLngList.lat = location.lat),\n        (LatLngList.lng = location.lng),\n        this.state.LatLngId.push(LatLngList, location.id)\n      );\n    });\n  };\n\n  loadLocations = () => {\n    API.getLocation()\n      .then((res) => {\n        this.setState({ locations: res.data });\n        // this.storeLatLng();\n        console.log(\"Location list\", this.state.locations);\n        console.log(\"LatLng List\", this.state.LatLng);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  // onMarkerDragEnd = (event) => {\n  //   let newLat = event.latLng.lat();\n  //   let newLng = event.latLng.lng();\n  //   console.log(event);\n\n  // };\n\n  handleChange = (address) => {\n    this.setState({ address: address });\n    this.setState({ filter: address ? true : false });\n    this.setState({\n      filteredLocation: this.state.locations.filter((location) =>\n        location.address\n          .toLocaleLowerCase()\n          .includes(this.state.address.toLocaleLowerCase())\n      ),\n    });\n  };\n\n  handleSelect = (address) => {\n    geocodeByAddress(address)\n      .then((results) => getLatLng(results[0]))\n      .then((latLng) => {\n        this.setState({ mapPosition: latLng, markerPosition: latLng });\n        console.log(\n          \"Success\",\n          latLng,\n          \"mapPosition -\",\n          this.state.mapPosition,\n          \"markerPosition -\",\n          this.state.markerPosition\n        );\n      })\n      .catch((error) => console.error(\"Error\", error));\n  };\n\n  render() {\n    // this.loadLocations();\n    const MapWithAMarker = withScriptjs(\n      withGoogleMap((props) => (\n        <GoogleMap\n          defaultZoom={12}\n          defaultCenter={{\n            lat: this.state.markerPosition.lat,\n            lng: this.state.markerPosition.lng,\n          }}\n        >\n          {/* <Marker\n            draggable={false}\n            onDragEnd={this.onMarkerDragEnd}\n            position={{\n              lat: this.state.markerPosition.lat,\n              lng: this.state.markerPosition.lng,\n            }}\n          >\n            {/* <InfoWindow>\n              <div>{this.state.address}</div>\n            </InfoWindow> */}\n          {/* </Marker> */}\n\n          <div>\n            {this.state.locations.map((location, idx) => {\n              if (this.state.selectedLocation != null && location.id != this.state.selectedLocation) return null;\n              // console.log(parseInt(location.lat), idx);\n              return this.state.InfoWindowShow ? (\n                <Marker\n                  id={location.id}\n                  key={idx}\n                  position={{\n                    lat: parseFloat(location.lat),\n                    lng: parseFloat(location.lng),\n                  }}\n                  title={location.address}\n                >\n                  <InfoWindow id={location.id}>\n                    <div>{location.address}</div>\n                  </InfoWindow>\n                </Marker>\n              ) : (\n                <Marker\n                  id={location.id}\n                  key={idx}\n                  position={{\n                    lat: parseFloat(location.lat),\n                    lng: parseFloat(location.lng),\n                  }}\n                />\n              );\n            })}\n          </div>\n\n          {/* <Marker\n          \n                position={{\n                  lat: 45.0861,\n                  lng: -93.2633,\n                }}\n              />; */}\n          {/* {Geocode.fromAddress(\"Coon Rapids\").then(\n            (response) => {\n              const { lat, lng } = response.results[0].geometry.location;\n              \n              console.log(lat, lng);\n            },\n            (error) => {\n              console.error(error);\n            }\n          )} */}\n        </GoogleMap>\n      ))\n    );\n\n    return (\n      this.loadLocations,\n      (\n        <div className=\"mapContainer\">\n          <Navbar />\n\n          {/* <Autocomplete\n\n          // style={{\n           \n          //   // backgroundImage= none !important;\n            \n          //   // justifySelf: \"center\",\n          //   // textAlign: \"center\",\n          //   // marginLeft: \"300px\",\n          //   // marginBottom: \"10px\",\n\n          // }}\n          types={[\"(cities)\"]}\n          \n          // onPlaceSelected={this.onPlaceSelected}\n        /> */}\n\n          {/* <AddressBar/> */}\n          <div className=\"container\">\n            {/* <Searchbar/> */}\n\n            <div style={{ textAlign: \"left\" }}>\n              <h3>\n                <b>Food Sharing Locations</b>\n              </h3>\n            </div>\n\n            <div className=\"row lg-12\">\n              <div className=\"col-xs-6 col-md-6\">\n                <ListContainer>\n                  {!this.state.filter ? (\n                    this.state.locations.map((location, idx) => {\n                      return (\n                        <List\n                          id={location.id}\n                          key={idx}\n                          onClick={() => {\n                            console.log(\"List onclick\");\n                          }}\n                          address={location.address}\n                          food={location.FoodItems[0].category}\n                          description={location.FoodItems[0].item_description}\n                        >\n                          <button\n                            id={location.id}\n                            className=\"btn btn-secondary btn-sm\"\n                            onClick={() => {\n                              !this.state.InfoWindowShow\n                                ? this.setState({ InfoWindowShow: true })\n                                : this.setState({ InfoWindowShow: false });\n\n                                this.setState({ selectedLocation: location.id })\n                              console.log(\n                                \"current location\",\n                                this.state.markerPosition,\n                                this.state.mapPosition\n                              );\n                            }}\n                          >\n                            Show Location\n                          </button>\n                        </List>\n                      );\n                    })\n                  ) : this.state.filteredLocation.length === 0 ? (\n                    <h4>Sorry no Locations found in this area</h4>\n                  ) : (\n                    this.state.filteredLocation.map((filteredLocation, idx) => {\n                      console.log(\n                        \"filtered filteredLocation\",\n                        filteredLocation\n                      );\n                      return (\n                        <List\n                          key={idx}\n                          onClick={() => {\n                            console.log(\"List onclick\");\n                          }}\n                          address={filteredLocation.address}\n                          food={filteredLocation.FoodItems[0].category}\n                          description={\n                            filteredLocation.FoodItems[0].item_description\n                          }\n                        >\n                          {\n                            <button\n                              className=\"btn btn-secondary btn-sm\"\n                              onClick={() => {\n                                !this.state.InfoWindowShow\n                                  ? this.setState({ InfoWindowShow: true })\n                                  : this.setState({ InfoWindowShow: false });\n                                this.setState({ filter: true, selectedLocation: filteredLocation.id });\n                                console.log(\n                                  \"current location\",\n                                  this.state.markerPosition,\n                                  this.state.mapPosition\n                                );\n                              }}\n                            >\n                              Show Location\n                            </button>\n                          }\n                        </List>\n                      );\n                    })\n                  )}\n                </ListContainer>\n              </div>\n              <div className=\"col-xs-12 col-md-6\">\n                {/* <AutoCompletePlaces/> */}\n                <PlacesAutocomplete\n                  searchOptions={\"cities\"}\n                  // types={['city']}\n                  value={this.state.address}\n                  onChange={this.handleChange}\n                  onSelect={this.handleSelect}\n                  style={{ justifyItems: \"center\" }}\n                >\n                  {({\n                    getInputProps,\n                    suggestions,\n                    getSuggestionItemProps,\n                    loading,\n                  }) => (\n                    <div>\n                      <input\n                        {...getInputProps({\n                          placeholder: \"Search Cities ...\",\n                          className: \"location-search-input\",\n                        })}\n                      />\n                      <div className=\"autocomplete-dropdown-container\">\n                        {loading && <div>Loading...</div>}\n                        {suggestions.map((suggestion) => {\n                          const className = suggestion.active\n                            ? \"suggestion-item--active\"\n                            : \"suggestion-item\";\n                          // inline style for demonstration purpose\n                          const style = suggestion.active\n                            ? { backgroundColor: \"#fafafa\", cursor: \"pointer\" }\n                            : { backgroundColor: \"#ffffff\", cursor: \"pointer\" };\n                          return (\n                            <div\n                              {...getSuggestionItemProps(suggestion, {\n                                className,\n                                style,\n                              })}\n                            >\n                              <span>{suggestion.description}</span>\n                            </div>\n                          );\n                        })}\n                      </div>\n                    </div>\n                  )}\n                </PlacesAutocomplete>\n                <MapWithAMarker\n                  googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyD812o98-5qpcViO3kCoUa8mpd4eyflbPo&v=3.exp&libraries=geometry,drawing,places\"\n                  loadingElement={<div style={{ height: `100%` }} />}\n                  containerElement={\n                    <div style={{ height: `600px`, width: `100%` }} />\n                  }\n                  mapElement={<div style={{ height: `100%`, width: \"100%\" }} />}\n                ></MapWithAMarker>\n              </div>\n            </div>\n          </div>\n\n          <Footer />\n        </div>\n      )\n    );\n  }\n}\n\nexport default Map;\n","C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\components\\Navbar.js",["83"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport LogoutButton from \"./LogoutButton\";\nimport LoginButton from \"./LoginButton\";\nimport { isAuthenticated, useAuth0 } from \"@auth0/auth0-react\";\n\nfunction Navbar() {\n  const AuthenticationButton = () => {\n    const { isAuthenticated } = useAuth0();\n\n    return isAuthenticated ? <LogoutButton /> : <LoginButton />;\n  }\n\n  return (\n    <div>\n      <nav className=\"navbar navbar-dark bg-dark\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          TC - Food Share\n        </Link>\n        <ul className=\"navbar-nav\">{AuthenticationButton()}</ul>\n      </nav>\n    </div>\n  );\n}\nexport default Navbar;\n\n// import React from \"react\";\n// import { Link } from \"react-router-dom\";\n// import LoginButton from './LoginButton';\n// import LogoutButton from './LogoutButton';\n\n// function Navbar() {\n//     return(\n//         <div>\n//             <nav className=\"navbar navbar-light bg-light\">\n//             <Link className=\"navbar-brand\" to=\"/React-Portfolio/home\">TC - Food Share</Link>\n//                 <ul className=\"navbar-nav\">\n\n//                          <LoginButton />\n//                             <LogoutButton />\n\n//                  <Link className=\"nav-item active\" to=\"\">Search</Link>\n//                  <Link className=\"nav-item active\" to=\"\">Login/Signup</Link>\n//              </ul>\n//              </nav>\n//         </div>\n//     )\n// }\n\n// export default Navbar;\n","C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\components\\Footer.js",[],"C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\components\\Header.js",[],"C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\components\\Input.js",["84","85"],"import React, { useState } from \"react\";\nimport \"./Input.css\";\nimport API from \"../utils/API\";\nimport Geocode from \"react-geocode\";\nimport {\n   Marker,\n} from \"react-google-maps\";\nfunction InputCard() {\n  const [address, setAddress] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [lat, setLat] = useState(\"\");\n  const [lng, setLng] = useState(\"\");\n  const submitHandler = (event) => {\n    event.preventDefault();\n    setAddress(`Test Set`);\n    API.saveLocation({\n      address: address,\n      category: category,\n      item_description: description,\n      lat:lat,\n      lng:lng\n    });\n    //Brock modified to log in handler\n    setAddress(\"\");\n    console.log(\"This is address after reset\" + address);\n    //Brock added to get checkboxes cleared, can turn into React but wanted it working for now\n    document.getElementById(\"customCheck1\").checked=false;\n    document.getElementById(\"customCheck2\").checked=false;\n    document.getElementById(\"customCheck3\").checked=false;\n    document.getElementById(\"customCheck4\").checked=false;\n    document.getElementById(\"customCheck5\").checked=false;\n    setCategory(\"\");\n    console.log(\"This is category after reset\" + category);\n    setDescription(\"\");\n    console.log(\"This is description after reset\" + description);\n    //End of Brock modified to log in handler\n  };\n  //Brock added for logging\n  console.log(\"This is address outside of submitHandler\" + address);\n  console.log(\"This is category outside of submitHandler\" + category);\n  console.log(\"This is description outside of submitHandler\" + description);\n//End of Brock add for logging\n  return (\n    <container className=\"card inputCard\">\n      <span className=\"title\">\n        <h5>Please add details below</h5>\n      </span>\n      <form onSubmit={submitHandler}>\n        {/* Submit Address */}\n        <div className=\"row address\">\n          <div className=\"col\">\n            <input\n              name=\"address\"\n              placeholder=\"Enter Donating  Address\"\n              type=\"text\"\n              //Brock added value setting below\n              value={address}\n              className=\"form-control\"\n              aria-label=\"Default\"\n              aria-describedby=\"inputGroup-sizing-default\"\n              onChange={\n                Geocode.fromAddress(address).then(\n                  (response) => {\n                    const { lat, lng } = response.results[0].geometry.location;\n                    setLat(lat);\n                    setLng(lng)\n                    console.log(lat, lng, \"Input Address\", address);\n                  },\n                  (error) => {\n                    console.error(error);\n                  }\n                ),\n                (event) => setAddress(event.target.value)}\n            />\n          </div>\n          <div className=\"col\">\n            <button type=\"button\" className=\"btn btn-success btn-md\">\n              Use My Location\n            </button>\n          </div>\n        </div>\n        {/* Food Category */}\n        <b>Please Choose Food Category:</b>\n        <div className=\"custom-control custom-checkbox\">\n          <input\n            name=\"category\"\n            value=\"Canned Foods\"\n            type=\"checkbox\"\n            className=\"custom-control-input\"\n            id=\"customCheck1\"\n            onChange={(event) => setCategory(event.target.value)}\n          />\n          <label className=\"custom-control-label\" for=\"customCheck1\">\n            Canned Foods\n          </label>\n        </div>\n        <div className=\"custom-control custom-checkbox\">\n          <input\n            name=\"category\"\n            value=\"Breads/Grains\"\n            type=\"checkbox\"\n            className=\"custom-control-input\"\n            id=\"customCheck2\"\n            onChange={(event) => setCategory(category + \"-- \" + event.target.value)}\n          />\n          <label className=\"custom-control-label\" for=\"customCheck2\">\n            Breads/Grains\n          </label>\n        </div>\n        <div className=\"custom-control custom-checkbox\">\n          <input\n            name=\"category\"\n            value=\"Vegetables/Fruits\"\n            type=\"checkbox\"\n            className=\"custom-control-input\"\n            id=\"customCheck3\"\n            onChange={(event) => setCategory(category + \"-- \" + event.target.value)}\n          />\n          <label className=\"custom-control-label\" for=\"customCheck3\">\n            Vegetables/Fruits\n          </label>\n        </div>\n        <div className=\"custom-control custom-checkbox\">\n          <input\n            name=\"category\"\n            value=\"Drink\"\n            type=\"checkbox\"\n            className=\"custom-control-input\"\n            id=\"customCheck4\"\n            onChange={(event) => setCategory(category + \"-- \" + event.target.value)}\n          />\n          <label className=\"custom-control-label\" for=\"customCheck4\">\n            Drinks\n          </label>\n        </div>\n        <div className=\"custom-control custom-checkbox\">\n          <input\n            name=\"category\"\n            value=\"Other\"\n            type=\"checkbox\"\n            className=\"custom-control-input\"\n            id=\"customCheck5\"\n            onChange={(event) => setCategory(category + \"-- \" + event.target.value)}\n          />\n          <label className=\"custom-control-label\" for=\"customCheck5\">\n            Other\n          </label>\n        </div>\n        {/* Description */}\n        <textarea\n          name=\"description\"\n          className=\"textarea\"\n          rows=\"4\"\n          cols=\"50\"\n          placeholder=\"Description / Comment\"\n          //Brock added value setting below\n          value={description}\n          onChange={(event) => setDescription(event.target.value)}\n        ></textarea>{\" \"}\n        <br />\n        <button\n          type=\"button\"\n          className=\"btn btn-primary btn-md\"\n          onClick={submitHandler}\n        >\n          Submit{\" \"}\n        </button>\n      </form>\n    </container>\n  );\n}\nexport default InputCard;","C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\components\\Searchbar.js",[],"C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\components\\List-container.js",["86"],"import React from 'react';\nimport \"./List-container.css\"\n\nexport default function(props) {\n\nreturn(\n    <div className=\"listContainer\" >\n      {\n      props.children    \n      }  \n    </div>    \n)\n\n}","C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\components\\List.js",["87"],"import React from \"react\";\nimport \"./List.css\";\n\nexport default function List(props) {\n  return (\n    <div className=\"listGroup\">\n     \n      Address: {props.address} <br />\n      Foods: {props.food}\n      <br />\n      Description: {props.description}\n      <br />\n      <div>\n        {/* <TwitterIcon size={32} round={true} />\n        <TwitterShareButton/> */}\n        <button type=\"button\" className=\"btn btn-primary btn-sm\">\n          Share          \n        </button>\n        <a\n          type=\"button\"\n          className=\"btn btn-success btn-sm\"\n          target=\"_blank\"\n          href={`https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(props.address)}`}\n        >\n         Direction\n        </a>\n        {props.children}\n      </div>\n      <hr color=\"red\" />\n    </div>\n  );\n}\n","C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\components\\PlacesAutoComplete.js",[],"C:\\Users\\eshoo\\Desktop\\final project\\tc-foodshare\\client\\src\\utils\\API.js",["88"],"import axios from \"axios\"\n\nexport default {\n    saveLocation: function(locationInfo) {\n        return axios.post(\"/api/input\", locationInfo);\n      },\n\n      getLocation: function(){\n        return axios.get(\"api/input\")\n      }\n\n}",{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":5,"column":8,"nodeType":"95","messageId":"96","endLine":5,"endColumn":19},{"ruleId":"93","severity":1,"message":"97","line":6,"column":8,"nodeType":"95","messageId":"96","endLine":6,"endColumn":20},{"ruleId":"93","severity":1,"message":"98","line":9,"column":3,"nodeType":"95","messageId":"96","endLine":9,"endColumn":9},{"ruleId":"93","severity":1,"message":"99","line":17,"column":8,"nodeType":"95","messageId":"96","endLine":17,"endColumn":17},{"ruleId":"93","severity":1,"message":"100","line":22,"column":8,"nodeType":"95","messageId":"96","endLine":22,"endColumn":13},{"ruleId":"93","severity":1,"message":"101","line":24,"column":8,"nodeType":"95","messageId":"96","endLine":24,"endColumn":26},{"ruleId":"102","severity":1,"message":"103","line":149,"column":70,"nodeType":"104","messageId":"105","endLine":149,"endColumn":72},{"ruleId":"93","severity":1,"message":"106","line":5,"column":10,"nodeType":"95","messageId":"96","endLine":5,"endColumn":25},{"ruleId":"93","severity":1,"message":"107","line":6,"column":4,"nodeType":"95","messageId":"96","endLine":6,"endColumn":10},{"ruleId":"108","severity":1,"message":"109","line":73,"column":18,"nodeType":"110","messageId":"111","endLine":73,"endColumn":19},{"ruleId":"112","severity":1,"message":"113","line":4,"column":1,"nodeType":"114","endLine":14,"endColumn":2},{"ruleId":"115","severity":1,"message":"116","line":22,"column":11,"nodeType":"117","endLine":22,"endColumn":26},{"ruleId":"112","severity":1,"message":"118","line":3,"column":1,"nodeType":"114","endLine":12,"endColumn":2},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'LoginButton' is defined but never used.","Identifier","unusedVar","'LogoutButton' is defined but never used.","'Circle' is defined but never used.","'Searchbar' is defined but never used.","'Input' is defined but never used.","'AutoCompletePlaces' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'isAuthenticated' is defined but never used.","'Marker' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","Assign object to a variable before exporting as module default","no-global-assign","no-unsafe-negation"]