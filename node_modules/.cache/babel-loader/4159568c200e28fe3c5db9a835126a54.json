{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Zakfe\\\\BOOTCAMP\\\\HOMEWORKS\\\\tc-foodshare\\\\client\\\\src\\\\App.js\";\nimport React from \"react\"; // import logo from \"./logo.svg\";\n\nimport \"./App.css\";\nimport { InfoWindow, withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nimport Navbar from \"./components/Navbar\";\nimport Searchbar from \"./components/Searchbar\";\nimport Footer from \"./components/Footer\";\nimport Autocomplete from \"react-google-autocomplete\"; // import Header from \"../../../Portfolio-React/src/components/Header\";\n\nGeocode.setApiKey(\"AIzaSyD812o98-5qpcViO3kCoUa8mpd4eyflbPo\");\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      address: \"\",\n      city: \"\",\n      area: \"\",\n      state: \"\",\n      zoom: 15,\n      height: 400,\n      mapPosition: {\n        lat: 0,\n        lng: 0\n      },\n      markerPosition: {\n        lat: 0,\n        lng: 0\n      }\n    };\n\n    this.getCity = addressArray => {\n      let city = '';\n\n      for (let i = 0; i < addressArray.length; i++) {\n        if (addressArray[i].types[0] && 'administrative_area_level_2' === addressArray[i].types[0]) {\n          city = addressArray[i].long_name;\n          return city;\n        }\n      }\n    };\n\n    this.getArea = addressArray => {\n      let area = '';\n\n      for (let i = 0; i < addressArray.length; i++) {\n        if (addressArray[i].types[0]) {\n          for (let j = 0; j < addressArray[i].types.length; j++) {\n            if ('sublocality_level_1' === addressArray[i].types[j] || 'locality' === addressArray[i].types[j]) {\n              area = addressArray[i].long_name;\n              return area;\n            }\n          }\n        }\n      }\n    };\n\n    this.getState = addressArray => {\n      let state = '';\n\n      for (let i = 0; i < addressArray.length; i++) {\n        for (let i = 0; i < addressArray.length; i++) {\n          if (addressArray[i].types[0] && 'administrative_area_level_1' === addressArray[i].types[0]) {\n            state = addressArray[i].long_name;\n            return state;\n          }\n        }\n      }\n    };\n\n    this.onMarkerDragEnd = event => {\n      let newLat = event.latLng.lat();\n      let newLng = event.latLng.lng();\n      Geocode.fromLatLng(position.coords.latitude, position.coords.longitude).then(response => {\n        console.log(response);\n        const address = response.results[0].formatted_address,\n              addressArray = response.results[0].address_components,\n              city = this.getCity(addressArray),\n              area = this.getArea(addressArray),\n              state = this.getState(addressArray);\n        console.log('city', city, area, state);\n        this.setState({\n          address: address ? address : '',\n          area: area ? area : '',\n          city: city ? city : '',\n          state: state ? state : ''\n        });\n      }, error => {\n        console.error(error);\n      });\n    };\n  }\n\n  render() {\n    const MapWithAMarker = withScriptjs(withGoogleMap(props => /*#__PURE__*/_jsxDEV(GoogleMap, {\n      defaultZoom: 10,\n      defaultCenter: {\n        lat: 44.986656,\n        lng: -93.258133\n      },\n      children: /*#__PURE__*/_jsxDEV(Marker, {\n        draggable: true,\n        onDragEnd: this.onMarkerDragEnd,\n        position: {\n          lat: 44.986656,\n          lng: -93.258133\n        },\n        children: /*#__PURE__*/_jsxDEV(InfoWindow, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this), \"Description: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 30\n            }, this), \"Quantity:\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n        style: {\n          justifySelf: \"center\",\n          textAlign: \"center\",\n          width: \"80%\",\n          marginBottom: \"10px\"\n        },\n        types: ['(regions)'],\n        onPlaceSelected: this.onPlaceSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapWithAMarker, {\n        googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyD812o98-5qpcViO3kCoUa8mpd4eyflbPo&v=3.exp&libraries=geometry,drawing,places\",\n        loadingElement: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: `100%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 27\n        }, this),\n        containerElement: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: `400px`,\n            width: `100%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 29\n        }, this),\n        mapElement: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: `100%`,\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Zakfe/BOOTCAMP/HOMEWORKS/tc-foodshare/client/src/App.js"],"names":["React","InfoWindow","withScriptjs","withGoogleMap","GoogleMap","Marker","Geocode","Navbar","Searchbar","Footer","Autocomplete","setApiKey","App","Component","state","address","city","area","zoom","height","mapPosition","lat","lng","markerPosition","getCity","addressArray","i","length","types","long_name","getArea","j","getState","onMarkerDragEnd","event","newLat","latLng","newLng","fromLatLng","position","coords","latitude","longitude","then","response","console","log","results","formatted_address","address_components","setState","error","render","MapWithAMarker","props","justifySelf","textAlign","width","marginBottom","onPlaceSelected"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAO,WAAP;AACA,SACEC,UADF,EAEEC,YAFF,EAGEC,aAHF,EAIEC,SAJF,EAKEC,MALF,QAMO,mBANP;AAOA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,YAAP,MAAyB,2BAAzB,C,CAEA;;AAEAJ,OAAO,CAACK,SAAR,CAAkB,yCAAlB;;AAEA,MAAMC,GAAN,SAAkBZ,KAAK,CAACa,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,OAAO,EAAE,EADH;AAENC,MAAAA,IAAI,EAAE,EAFA;AAGNC,MAAAA,IAAI,EAAE,EAHA;AAINH,MAAAA,KAAK,EAAE,EAJD;AAKNI,MAAAA,IAAI,EAAE,EALA;AAMNC,MAAAA,MAAM,EAAE,GANF;AAONC,MAAAA,WAAW,EAAE;AACXC,QAAAA,GAAG,EAAE,CADM;AAEXC,QAAAA,GAAG,EAAE;AAFM,OAPP;AAWNC,MAAAA,cAAc,EAAE;AACdF,QAAAA,GAAG,EAAE,CADS;AAEdC,QAAAA,GAAG,EAAE;AAFS;AAXV,KADwB;;AAAA,SAkBhCE,OAlBgC,GAkBrBC,YAAD,IAAkB;AAC1B,UAAIT,IAAI,GAAG,EAAX;;AACA,WAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,YAAY,CAACE,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC1C,YAAID,YAAY,CAACC,CAAD,CAAZ,CAAgBE,KAAhB,CAAsB,CAAtB,KAA4B,kCAAkCH,YAAY,CAACC,CAAD,CAAZ,CAAgBE,KAAhB,CAAsB,CAAtB,CAAlE,EAA4F;AACxFZ,UAAAA,IAAI,GAAGS,YAAY,CAACC,CAAD,CAAZ,CAAgBG,SAAvB;AACA,iBAAOb,IAAP;AACH;AACJ;AACJ,KA1BiC;;AAAA,SA4BlCc,OA5BkC,GA4BvBL,YAAD,IAAkB;AACxB,UAAIR,IAAI,GAAG,EAAX;;AACA,WAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,YAAY,CAACE,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC1C,YAAID,YAAY,CAACC,CAAD,CAAZ,CAAgBE,KAAhB,CAAsB,CAAtB,CAAJ,EAA8B;AAC1B,eAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,YAAY,CAACC,CAAD,CAAZ,CAAgBE,KAAhB,CAAsBD,MAA1C,EAAkDI,CAAC,EAAnD,EAAuD;AACnD,gBAAI,0BAA0BN,YAAY,CAACC,CAAD,CAAZ,CAAgBE,KAAhB,CAAsBG,CAAtB,CAA1B,IAAsD,eAAeN,YAAY,CAACC,CAAD,CAAZ,CAAgBE,KAAhB,CAAsBG,CAAtB,CAAzE,EAAmG;AAC/Fd,cAAAA,IAAI,GAAGQ,YAAY,CAACC,CAAD,CAAZ,CAAgBG,SAAvB;AACA,qBAAOZ,IAAP;AACH;AACJ;AACJ;AACJ;AACJ,KAxCiC;;AAAA,SA0ClCe,QA1CkC,GA0CtBP,YAAD,IAAkB;AACzB,UAAIX,KAAK,GAAG,EAAZ;;AACA,WAAK,IAAIY,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,YAAY,CAACE,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC1C,aAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,YAAY,CAACE,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC1C,cAAID,YAAY,CAACC,CAAD,CAAZ,CAAgBE,KAAhB,CAAsB,CAAtB,KAA4B,kCAAkCH,YAAY,CAACC,CAAD,CAAZ,CAAgBE,KAAhB,CAAsB,CAAtB,CAAlE,EAA4F;AACxFd,YAAAA,KAAK,GAAGW,YAAY,CAACC,CAAD,CAAZ,CAAgBG,SAAxB;AACA,mBAAOf,KAAP;AACH;AACJ;AACJ;AACJ,KApDiC;;AAAA,SAsDhCmB,eAtDgC,GAsDbC,KAAD,IAAW;AAC3B,UAAIC,MAAM,GAAGD,KAAK,CAACE,MAAN,CAAaf,GAAb,EAAb;AACE,UAAIgB,MAAM,GAAGH,KAAK,CAACE,MAAN,CAAad,GAAb,EAAb;AAEAhB,MAAAA,OAAO,CAACgC,UAAR,CAAmBC,QAAQ,CAACC,MAAT,CAAgBC,QAAnC,EAA6CF,QAAQ,CAACC,MAAT,CAAgBE,SAA7D,EAAwEC,IAAxE,CACEC,QAAQ,IAAI;AACRC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,cAAM7B,OAAO,GAAG6B,QAAQ,CAACG,OAAT,CAAiB,CAAjB,EAAoBC,iBAApC;AAAA,cACIvB,YAAY,GAAGmB,QAAQ,CAACG,OAAT,CAAiB,CAAjB,EAAoBE,kBADvC;AAAA,cAEIjC,IAAI,GAAG,KAAKQ,OAAL,CAAaC,YAAb,CAFX;AAAA,cAGIR,IAAI,GAAG,KAAKa,OAAL,CAAaL,YAAb,CAHX;AAAA,cAIIX,KAAK,GAAG,KAAKkB,QAAL,CAAcP,YAAd,CAJZ;AAKAoB,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoB9B,IAApB,EAA0BC,IAA1B,EAAgCH,KAAhC;AACA,aAAKoC,QAAL,CAAc;AACVnC,UAAAA,OAAO,EAAGA,OAAD,GAAYA,OAAZ,GAAsB,EADrB;AAEVE,UAAAA,IAAI,EAAGA,IAAD,GAASA,IAAT,GAAgB,EAFZ;AAGVD,UAAAA,IAAI,EAAGA,IAAD,GAASA,IAAT,GAAgB,EAHZ;AAIVF,UAAAA,KAAK,EAAGA,KAAD,GAAUA,KAAV,GAAkB;AAJf,SAAd;AAMH,OAfH,EAgBEqC,KAAK,IAAI;AACLN,QAAAA,OAAO,CAACM,KAAR,CAAcA,KAAd;AACH,OAlBH;AAoBH,KA9E+B;AAAA;;AAkFhCC,EAAAA,MAAM,GAAG;AACP,UAAMC,cAAc,GAAGnD,YAAY,CACjCC,aAAa,CAAEmD,KAAD,iBACZ,QAAC,SAAD;AACE,MAAA,WAAW,EAAE,EADf;AAEE,MAAA,aAAa,EAAE;AAAEjC,QAAAA,GAAG,EAAE,SAAP;AAAkBC,QAAAA,GAAG,EAAE,CAAC;AAAxB,OAFjB;AAAA,6BAME,QAAC,MAAD;AACE,QAAA,SAAS,EAAE,IADb;AAEE,QAAA,SAAS,EAAE,KAAKW,eAFlB;AAGE,QAAA,QAAQ,EAAE;AAAEZ,UAAAA,GAAG,EAAE,SAAP;AAAkBC,UAAAA,GAAG,EAAE,CAAC;AAAxB,SAHZ;AAAA,+BAKE,QAAC,UAAD;AAAA,iCACE;AAAA,6CAEE;AAAA;AAAA;AAAA;AAAA,oBAFF,gCAGe;AAAA;AAAA;AAAA;AAAA,oBAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,YADW,CADoB,CAAnC;AA0BA,wBACE;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,YAAD;AAAc,QAAA,KAAK,EAAE;AAACiC,UAAAA,WAAW,EAAC,QAAb;AAAuBC,UAAAA,SAAS,EAAE,QAAlC;AAA4CC,UAAAA,KAAK,EAAC,KAAlD;AAAyDC,UAAAA,YAAY,EAAC;AAAtE,SAArB;AACA,QAAA,KAAK,EAAE,CAAC,WAAD,CADP;AAEA,QAAA,eAAe,EAAE,KAAKC;AAFtB;AAAA;AAAA;AAAA;AAAA,cAFF,eAME,QAAC,cAAD;AACE,QAAA,YAAY,EAAC,+HADf;AAEE,QAAA,cAAc,eAAE;AAAK,UAAA,KAAK,EAAE;AAAExC,YAAAA,MAAM,EAAG;AAAX;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAFlB;AAGE,QAAA,gBAAgB,eAAE;AAAK,UAAA,KAAK,EAAE;AAAEA,YAAAA,MAAM,EAAG,OAAX;AAAmBsC,YAAAA,KAAK,EAAG;AAA3B;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAHpB;AAIE,QAAA,UAAU,eAAE;AAAK,UAAA,KAAK,EAAE;AAAEtC,YAAAA,MAAM,EAAG,MAAX;AAAkBsC,YAAAA,KAAK,EAAE;AAAzB;AAAZ;AAAA;AAAA;AAAA;AAAA;AAJd;AAAA;AAAA;AAAA;AAAA,cANF,eAYE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD;;AA7H+B;;AAgIlC,eAAe7C,GAAf","sourcesContent":["import React from \"react\";\r\n// import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport {\r\n  InfoWindow,\r\n  withScriptjs,\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  Marker,\r\n} from \"react-google-maps\";\r\nimport Geocode from \"react-geocode\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Searchbar from \"./components/Searchbar\";\r\nimport Footer from \"./components/Footer\";\r\nimport Autocomplete from \"react-google-autocomplete\";\r\n\r\n// import Header from \"../../../Portfolio-React/src/components/Header\";\r\n\r\nGeocode.setApiKey(\"AIzaSyD812o98-5qpcViO3kCoUa8mpd4eyflbPo\");\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    address: \"\",\r\n    city: \"\",\r\n    area: \"\",\r\n    state: \"\",\r\n    zoom: 15,\r\n    height: 400,\r\n    mapPosition: {\r\n      lat: 0,\r\n      lng: 0,\r\n    },\r\n    markerPosition: {\r\n      lat: 0,\r\n      lng: 0,\r\n    },\r\n  };\r\n\r\n  getCity = (addressArray) => {\r\n    let city = '';\r\n    for (let i = 0; i < addressArray.length; i++) {\r\n        if (addressArray[i].types[0] && 'administrative_area_level_2' === addressArray[i].types[0]) {\r\n            city = addressArray[i].long_name;\r\n            return city;\r\n        }\r\n    }\r\n};\r\n\r\ngetArea = (addressArray) => {\r\n    let area = '';\r\n    for (let i = 0; i < addressArray.length; i++) {\r\n        if (addressArray[i].types[0]) {\r\n            for (let j = 0; j < addressArray[i].types.length; j++) {\r\n                if ('sublocality_level_1' === addressArray[i].types[j] || 'locality' === addressArray[i].types[j]) {\r\n                    area = addressArray[i].long_name;\r\n                    return area;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\ngetState = (addressArray) => {\r\n    let state = '';\r\n    for (let i = 0; i < addressArray.length; i++) {\r\n        for (let i = 0; i < addressArray.length; i++) {\r\n            if (addressArray[i].types[0] && 'administrative_area_level_1' === addressArray[i].types[0]) {\r\n                state = addressArray[i].long_name;\r\n                return state;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n  onMarkerDragEnd = (event) => {\r\n    let newLat = event.latLng.lat();\r\n      let newLng = event.latLng.lng();\r\n\r\n      Geocode.fromLatLng(position.coords.latitude, position.coords.longitude).then(\r\n        response => {\r\n            console.log(response)\r\n            const address = response.results[0].formatted_address,\r\n                addressArray = response.results[0].address_components,\r\n                city = this.getCity(addressArray),\r\n                area = this.getArea(addressArray),\r\n                state = this.getState(addressArray);\r\n            console.log('city', city, area, state);\r\n            this.setState({\r\n                address: (address) ? address : '',\r\n                area: (area) ? area : '',\r\n                city: (city) ? city : '',\r\n                state: (state) ? state : '',\r\n            })\r\n        },\r\n        error => {\r\n            console.error(error);\r\n        }\r\n    );\r\n  };\r\n\r\n\r\n  \r\n  render() {\r\n    const MapWithAMarker = withScriptjs(\r\n      withGoogleMap((props) => (\r\n        <GoogleMap\r\n          defaultZoom={10}\r\n          defaultCenter={{ lat: 44.986656, lng: -93.258133 }}\r\n        >\r\n         \r\n\r\n          <Marker\r\n            draggable={true}\r\n            onDragEnd={this.onMarkerDragEnd}\r\n            position={{ lat: 44.986656, lng: -93.258133 }}\r\n          >\r\n            <InfoWindow>\r\n              <div>\r\n                Name:\r\n                <br />\r\n                Description: <br />\r\n                Quantity:\r\n              </div>\r\n            </InfoWindow>\r\n          </Marker>\r\n        </GoogleMap>\r\n      ))\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <Navbar />\r\n        <Autocomplete style={{justifySelf:\"center\", textAlign: \"center\", width:\"80%\", marginBottom:\"10px\" }}\r\n        types={['(regions)']}\r\n        onPlaceSelected={this.onPlaceSelected}\r\n        />\r\n        <MapWithAMarker\r\n          googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyD812o98-5qpcViO3kCoUa8mpd4eyflbPo&v=3.exp&libraries=geometry,drawing,places\"\r\n          loadingElement={<div style={{ height: `100%` }} />}\r\n          containerElement={<div style={{ height: `400px`, width: `100%` }} />}\r\n          mapElement={<div style={{ height: `100%`, width: \"100%\" }} />}\r\n        />\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}